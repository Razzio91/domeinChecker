Assignment 2; databases

Goals
- refresh the sql basics
- use mysql in combination with php to store, obtain and delete data

# mariadb (mysql)

Given you already have had some mysql courses these tutorials should provide enough info to strengthen your mysql skills.

## Getting started

https://www.mysqltutorial.org/getting-started-with-mysql/

Perform the sections on your local machine.

## Basics

https://www.mysqltutorial.org/mysql-basics/
Perform the first 5 sections on your local machine

## Queries

### Query 1

Write a query to list all employees of a given office, sorted by the officeCode and employeeNumber

Result should look like:
```
+------------+----------------+----------+-----------+-----------+-------+----------+
| officeCode | employeeNumber | lastName | firstName | extension | email | jobTitle |
+------------+----------------+----------+-----------+-----------+-------+----------+
|            |                |          |           |           |       |          |
+------------+----------------+----------+-----------+-----------+-------+----------+
```
### Query 2

Write a query which lists all employees and the office(s) they work for. If a employee work for multiple offices it should be listed multiple times.

Result should look like:
```
+----------------+-----------+----------+-------+----------+------------+------+---------+
| employeeNumber | firstName | lastName | email | jobTitle | officeCode | city | country |
+----------------+-----------+----------+-------+----------+------------+------+---------+
|                |           |          |       |          |            |      |         |
+----------------+-----------+----------+-------+----------+------------+------+---------+
```
### Query 3

Write a query showing the amount of employees per office

Result should look like:
```
+------------+-------------------+
| officeCode | amountOfEmployees |
+------------+-------------------+
|            |                   |
+------------+-------------------+
```
### Query 4

Write a query to show the amount of orders per customer

Result should look like:
```
+----------------+----------------+
| customerNumber | amountOfOrders |
+----------------+----------------+
|                |                |
+----------------+----------------+
```
### Query 5

Write a query which displays how many distinct customers ordered a product Code

Result should look like:
```
+----------------+--------------------------+
| productCode    | amountOfCustomersOrdered |
+----------------+--------------------------+
|                |                          |
+----------------+--------------------------+
```
### Query 6

Write a query listing all customer who ordered a certain product including the amount of orders.

Result should look like:
```
+----------------+-------------+----------------+
| customerNumber | productCode | amountOfOrders |
+----------------+-------------+----------------+
|                |             |                |
+----------------+-------------+----------------+
```
### Query 7

Write a query displaying the total amount (pricing) every customer ordered. and order it on the most total price ordered.

Result should look like:
```
+----------------+-------------------+
| customerNumber | totalPriceOrdered |
+----------------+-------------------+
|                |                   |
+----------------+-------------------+
```
### Query 8

Write a query to find the employee who was responsible for the most orders (so amount of orders and not pricing)

Result should look like:
```
+----------------+----------------+
| employeeNumber | amountOfOrders |
+----------------+----------------+
|                |                |
+----------------+----------------+
```

### Query 9

Write a query to list all employees and the amount of orders they sold (in terms of pricing) to determine the employee who made the most money.

Result should look like:
```
+----------------+----------------+
| employeeNumber | totalPriceSold |
+----------------+----------------+
|                |                |
+----------------+----------------+
```
### Query 10

Write a query to find out how much money every office made from orders

Result should look like:
```
+------------+------+---------+----------------+
| officeCode | city | country | totalPriceSold |
+------------+------+---------+----------------+
|            |      |         |                |
+------------+------+---------+----------------+
```


# php/mysql to-do list

Use php and mysql without external libraries and frameworks such as symfony to create a 
command-line to-do tool on your local machine.

## Requirements
The tool should be able to;
- add a to-do item with a deadline
- remove a to-do item
- mark an items as done
- you can update the deadline of an item
- display a list of to-dos (sorted by deadline) which are not marked as done yet

While the project may be split into several files, the entry point of the script should always be the same.
Eg;
```
php todo.php add-item "submit hours" "2022-08-23 12:00:00"
php todo.php display

1, 2022-08-23 12:00:00, submit hours

php todo.php remove 1
php todo.php display


```

## References
### Using PDO
The following pages can be used a reference when writing the queries
- connect to database
    - https://www.php.net/manual/en/pdo.connections.php
- query (insert/update/delete)
    - https://www.php.net/manual/en/pdo.query.php
    - https://www.php.net/manual/en/pdo.prepare.php
    - https://www.php.net/manual/en/pdostatement.execute.php
    - https://www.php.net/manual/en/pdostatement.fetchall.php

## PDO continued

Rewrite query 6 - 10 of the first part of the assignment into PDO statements. Provide separate scripts per query.

# Domain checker
This part should be done on your existing VM with the domain checker.

IF this was not already done please install mariadb (mysql).

## Design data-set
Design a table to store domain checker results. Discuss the solution before continuing. 
The table should at least hold the domain-name, check result and the time on which the check was done.

After is has been discussed the table should be added to your project.

## Add entries
Use PDO to insert a row into the table on every domain check

## Overview
Add a page you your checker (/history) which displays all stored domain-check results.

